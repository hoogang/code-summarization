select     orderid,     case when maxprice is null then 0 else maxprice end as maxprice from (     select         orderid = o.id,         maxprice = (select max(price) from orderlines ol                      where ol.orderid = o.id)     from orders o ) sub 
select group_concat(bar) from table group by foo; 
select * from table where title like '%' || ? || '%'; 
select      product_name  from      products  where      product_name collate sql_latin1_general_cp1_ci_ai like 'chateau' 
select employeename, positionname, groupname from employees e left join employeepositions ep on ep.employeeid = e.employeeid left join positions p on p.positionid = ep.positionid left join employeegroup eg on eg.groupid = e.groupid where e.employeeid = some_value 
select   (select sum(data1) from firsttable where date=@date) firsttablesum,  (select sum(data2) from secondtable where date=@date) secondtablesum 
select * from data inner join (select idnum, max(count) from data             group by idnum )sub on sub.idnum=data.idnum && sub.count=data.count 
select * from articles order by time desc 
select time(fieldname) from tablename 
select coalesce(unix_timestamp(date(p.published_at)),0) as 'day',         coalesce(sum(case when p.status = 2 then p.value end),0) as 'total_accepted',        coalesce(sum(case when p.status = 1 then p.value end),0) as 'total_open',        coalesce(sum(case when p.status = 3 then p.value end),0) as 'total_declined',        coalesce(sum(case when p.status !=0  then p.value end),0) as 'total_published' from posts as p where p.published_at is not null group by date(p.published_at); 
select name, num from tbl where name in (     select name from tbl     where num in (10, 20)     group by name      having count(*) = 2  ) and num in (10, 20)  
select top 1 * from     root r         left join     rootitem ri         on             r.id = ri.rootid and             ri.accountid = @accountid where     r.private = 0 and     ri.id is null order by     newid() 
select count(distinct event_id) from   posts  where  user_id = '43'    and event_id is not null 
select c.city, t.time_slot  from cities c left join city_date d on d.city_id = c.id  left join city_time t on t.city_date_id = d.city_id and t.city_date_id = '1' 
select least(t.c_price1, t.c_price2) as lowest     from your_table t    where least(t.c_price1, t.c_price2) != 0.00 order by lowest    limit 5 
select * from table where create_date  between concat_ws(' ',curdate(),'23:00:00') - interval 1 day  and concat_ws(' ',curdate(),'23:00:00') 
select demotable.* from demotable left join demotable as prev on prev.id = demotable.id - 1 where demotable.name != prev.name 
select *   from pools  where id not in (        select poolid          from votes         where userid = 142        ) 
select sc.title as subcat_title, c.title as cat_title      from subcategory as sc left join category as c        on c.id = sc.cid 
select col3, format(avg([col2]-[col1]),"hh:mm:ss") as timediff from table1 group by col3; 
select u.id  from wp_users as u inner join wp_usermeta as umf on u.id = umf.user_id  inner join wp_usermeta as uml on u.id = uml.user_id  where umf.meta_key = 'first_name'      and umf.meta_value = 'myfirstname'     and uml.meta_key = 'last_name'      and uml.meta_value = 'dijkstra' 
select convert(varchar,[date],103) as [date]                       ,[vouchertype]                       ,[billno]                       ,[debit]                       ,[credit] from [accountsledger] order by [accountsledger].[date] 
select username     from user u         inner join usergroup ug             on u.usergroup_usergroupid = ug.usergroupid          left join user_has_bar ub             on u.userid = ub.user_userid     where u.userage = 10         and u.location_locationid = 1         and ub.user_userid is null 
select * from (select * from msg order by id desc limit 10) as requiredlimit order by id asc 
select c.*,       (select p.id, p.title         from products as p        where p.category_id = c.id        limit 1) from categories c 
select     count(i.id) as count    ,l.id    ,(     100.0 * count(i.id)      /       (       select count(i2.id)        from location l2       join item i2 on i2.locid = l2.id       where l2.id = l1.id      )    ) as percent    from location l    join item i on i.locid = l.id  where l.id in (36,38,39,40)  group by l.id 
select t.ename, t.deptno, mx.sal as sal, mx.avg_sal as avg_sal from tbl t,    (select max(sal) as sal, avg(sal) as avg_sal, deptno    from tbl    group by deptno) mx where t.deptno = mx.deptno and t.sal = mx.sal 
select     (select sum(`upload_bandwidth`) from `upload_facts` where `date`        between '2011-09-01' and '2011-09-30')     +     (select sum(`download_bandwidth`) from `download_facts` where `date`        between '2011-09-01' and '2011-09-30') as `total` 
select hotel_id, hotel_name, min(price) from region join region_contents     on regionname = <reqdname> and region.regionid = region_contents.regionid join prices     on region_contents.hotel_id = prices_hotel_id where end_date > now() group by hotel_id order by min(price) 
select count(id)+1 as rank from players where score>[yourplayerscore] 
select   categories.name,   ... from   categories   inner join partcategories on partcategories.categoryid=categories.categoryid   inner join parts on partcategories.partid=parts.partid   inner join manufacturers on parts.manufacturerid=manufacturers.manufacturerid where   manufacturers.manufacturerid=<your chosen manufacturerid> 
select name from top_categories where top_categories.id = your_id   order by name asc  limit 0,1 
select count(*) as match_count from clan_members c, roster_members r, match_players m where c.member_id = r.clan_member_id and r.id = m.roster_member_id and c.id = 123 
select sql_calc_found_rows k_services.id, service_status, service_tourno, service_date, service_cxldate, service_difficultperiod, service_priority, service_currency, service_key_so, service_price_so, service_key_ok, service_price_cfm, service_supplement      from  k_services     join k_remarks on (k_remarks.remark_service = k_services.id and k_remarks.remark_type = 9)     where  k_services.service_market = 2      limit 0, 25 
select x, y, z from reinforcements  where durability >= 1  and world=? and (pow((x-?),2)+pow((y-?),2)+pow((>-?),2))<pow(?,2) 
select downloaddate, count(downloaddate) as totaldownloaded from yourtable group by downloaddate 
select    dbo.bsc.bsc_id,   dbo.bsc.bsc_name,    dbo.bsc.bsc_owner,    case maxview.maxdate      when null then null      else datediff(m,convert(datetime, left(maxview.maxdate, 4)+ right(maxview.maxdate, 2) + '01', 121),getdate())    end  from dbo.bsc  left outer join (select bsc_id, max(dbo.bscdataset.dateperiod) as maxdate  from dbo.bscdataset group by bsc_id) maxview  on dbo.bsc.bsc_id = maxview.bsc_id; 
select count(distinct(t1.uid)) from node t1 inner join node t2 on t2.uid = t1.uid and t2.created between date_add(now(), interval -2 month) and date_add(now(), interval -1 month) inner join node t3 on t3.uid = t1.uid and t3.created between date_add(now(), interval -3 month) and date_add(now(), interval -2 month) inner join node t4 on t4.uid = t1.uid and t4.created between date_add(now(), interval -4 month) and date_add(now(), interval -3 month) where t1.created between date_add(now(), interval -1 month) and now() 
select     s.name,     avg(r.result) as average,     t1.result as test1,     t2.result as test2 from     students s,     results r,     results t1,     results t2 where     r.student_id = s.id and     t1.test_id = 1 and     t1.student_id = s.id and     t2.test_id = 2 and     t2.student_id = s.id group by s.id; + | name | average | test1 | test2 | + | john |      70 |    90 |    50 |  | jane |    82.5 |    70 |    95 |  + 
select birthdaycolumn from yourtable where month(birthdaycolumn) = month(getdate()) 
select student_name,         city,         state,         request_date,         lat,         lng,         <<distance column>> as distance,         vendor.user_purchased from lesson_requests  inner join     (     select student_id, max(request_date) as max_request_date     from lesson_requests     where <<complex condition>>     group by student_name    ) as recent_student_lesson_request    on  lesson_requests.student_name = recent_student_lesson_request.student_name        and lesson_requests.request_date = recent_student_lesson_request.max_request_date left join vendor on v.user_purchased = lesson_requests.student_name where vendor.user_purchased <> 'abs_company'     and distance < blah; 
select website.websitename, count(*) from website  inner join ( select userid, websiteid, count(*) from loginrecord group by userid, websiteid having count(*) > 1) as t1 on t1.websiteid = website.websiteid group by website.websitename 
select [stuff] from  group_profile gp with (nolock)    inner join group_profile_type gpt with (nolock) on gp.group_profile_type_id = gpt.group_profile_type_id and gpt.type_code = 'fosterhome' and gp.agency_id = @agency_id and gp.is_deleted = 0    inner join group_profile mo with (nolock) on gp.managing_office_id = mo.group_profile_id    join payor_vendor pv on isnull(gp.payor_vendor_id, 'thisvaluewillneveroccur') = isnull(pv.payor_vendor_id, 'thisvaluewillneveroccur') ...etc... 
select count(*) from ... group by a, b, c having ... 
select     g.event,     min(g.selection) as selection_a,     max(g.selection) as selection_b from golf_matches as g group by g.event union all select     g.event,     max(g.selection),     min(g.selection) from golf_matches as g group by g.event order by 1, 2; 
select * from `members` where username like 'bx%' order by length(username), username 
select * from (select m.name,rank_level,rank_win  ,rank_loss from      (select @rank := @rank + 1 as rank_level,name,id from users order by level desc) m      inner join  (select @rankw := @rankw + 1 as rank_win,name,id          from users order by win desc) w on m.id=w.id      inner join  (select @rankl := @rankl + 1 as rank_loss,name,id          from users order by loss desc) l on m.id=l.id       , (select @rank := 0) m2,(select @rankw := 0) w2,(select @rankl := 0) l2 ) k where k.name= 'alan'; 
select      p1.c_clm,     p1.c_sta_clm,     p1.whse_curr_row_ind,     p2.loaded from pearl_p.tltc900_clm_prsst p1 inner join (     select max(whse_load_ts) as loaded, c_clm     from  pearl_p.tltc900_clm_prsst     where whse_curr_row_ind not in('y')     group by c_clm ) p2     on p1.whse_load_ts = p2.loaded     and p1.c_clm = p2.c_clm where p1.whse_curr_row_ind not in('y') 
select * from table order by length(areacodefield)-length(replace(areacodefield, ",", ""))) desc 
select id, subid from tbla union  select id, subid from tblb 
select * from image order by image_id desc limit (x-10), 10 
select * from table where isnull(@param1,field1)=field1 and isnull(@param2,field2)=field2 and isnull(@param3,field3)=field3 and isnull(@param4,field4)=field4 and isnull(@param5,field5)=field5 
select  *,         (         select  coalesce(max(cp.post_date), ct.post_date)         from    conversation_conversationpost cp         where   cp.thread_id = ct.id         ) as sort_date from    conversation_conversationthread ct order by         sort_date desc 
select * from sub_menu left join root_sub on sub_menu.id = root_sub.sub_id left join root_menu on root_sub.root_id = root_menu.id 
select id      , item      , quantity      , date   from (select id              , item              , quantity              , date           from your_table          order by quantity desc, date desc         ) where rownum = 1 
select        t1.id,        t1.variable,        t1.value     from        table t1     where        exists ( select 1                    from t2                    where t2.id != t1.id                      and t2.variable == t1.variable                      and t2.value != t1.value) 
select   (populate_record(null::public.usr, logged_actions.row_data)).* from   audit.logged_actions where   audit.logged_actions.table_name = 'usr' 
select userid, uname from user1  where userid in  (select bidder from bid group by bidder having count(bidder) =  (select max(c) from (select count(*) as c, bidder from bid group by bidder))); 
select metalid,   max(case when currencyid = 1 then fixam end) /    max(case when currencyid = 2 then fixam else 1 end) output from fixes group by metalid 
select  a.*, c.date from    album a         inner join album_photo b             on a.album_id = b.album_id         inner join photo c             on b.photo_id = c.photo_id where   c.nick = 'owner' and         (           select count(*)            from   album_photo d           where  b.album_id = d.album_id and                  d.nick = 'owner' and                  b.date >= d.date         ) <= 2 
select t2.* from (     select u2 as value from table1      where u1 = :value and status = "confirmed"     union     select u1 as value from table1      where u2 = :value and status = "confirmed" ) as t1, table2 as t2 where t2.u1 = t1.value  or t2.u2 = t1.value order by t2.id 
select employee_id, sum(timediff(time_off, time_on)) as diff from tbl where year(time_on) = 2013     and month(time_on) = 3 group by employee_id 
select * from rooms left join reservations  on reservations.r_number = rooms.number and reservations.todate > '4/19/2013' and reservations.fromdate < '4/20/2013' where rooms.r_size = 'roomsize'  and reservations.r_number is null 
select * into dbo.stagingtable from abc where 1=2     go     bulk      insert stagingtable     from 'f:\test.csv'     with     (         fieldterminator = ',',         rowterminator = '\n'     )     go     set identity_insert abc on go     insert into abc (column1,column2,etc)      select * from stagingtable 
select user_id, date, total_time from (   select user_id, @rownum:=@rownum+1 as rownum    from table_user , (select @rownum:=0) r   where date = current_date    order by total_time desc ) temp  where rownum < (select count(*) from table_user where date = current_date) / 10 
select * from (select * from $tablename where type='6' and country_code='gb' order by auto_incerment_id desc limit 300) as a order by auto_incerment_id asc limit $start, $limit 
select id,floor(abs(checksum(newid())) / 2147483647.0 * 3 + 1) as rn into #tmp from name update name set surname=data  from #tmp join sampledata sd on sd.rownumber=#tmp.rn where #tmp.id=name.id select * from name 
select count(q.id) from `profile_questions` q  left join profile_answers a on q.id = a.question_id                              and q.user_id = a.answered_by where q.user_id = 5 and a.answered_by is null 
select count(*)+1 rank from bids where bid_amount > 15 
select doc.code,doc.dataaccept,doctypes.name,org.name from doc left outer join doctypes join org on doc.type=doctypes.code and doc.org=org.code; where doc.code < 1000 ; order by 1 
select  ...    case when x = 1 then col else your calculation end from table cross join (select 1 as x union all select 2 as x) dt 
select * from mytable where column_month = date_format(current_date, '%c'); 
select books.book_title, authors.author_name, comments.comment from books inner join books_authors on books.book_id=books_authors.book_id inner join authors on books_authors.author_id=authors.author_id left join comments_users on comments_users.book_id = books.book_id inner join comments on comments_users.comment_id = comments.comment_id inner join users on comments_users.user_id = users.user_id where books.book_id=7 
select id, shipping_date from t group by id, shipping_date having count(*) > 1; 
select * from (     select * from `items` where important = 1 or type = 'news'      order by `important` desc, `date` desc limit 3 ) x order by `date` desc 
select * from order_items o where item_number not in (     select item_number     from processes     where process_number in (1, 2, 3)     ) 
select    distinct start_serial+level-1 serial from    yourtable connect by level-1<=end_serial-start_serial order by 1; 
select subid,         listagg(status, '/') within group (order by null) as status from the_table group by subid; 
select * from event where year(year) >= ? and year(year) <= ?+1 
select string_agg(name1, ',') as name1s from t1 
select * from (select 1,2) t1 join (select 5,6) t2 union  select * from (select 3,4) t1 join (select 7,8) t2 
select *    from one one1    where ( 3 ) = ( select count( one2.salary )                    from one one2                    where one2.salary >= one1.salary                  ) 
select distinct on ( topic_category_id ) * from topic t     where post_time >= abstime(now ( ) - 24 * 3600 )     order by topic_category_id, post_time desc limit 10; 
select a.company_id,b.company_id as duplicate_company_id from company_table a, company_table b where a.id != b.id and a.company_id != b.company_id and (     a.ph_no = b.ph_no     or     a.mobile_no = b.mobile_no     or     a.email = b.email ) 
select (select sum(money1) from t1 where job_id='8') -         (select sum(money2) from t2 where job_id='8') 
select replace(name, substr(name, 1, regexp_instr( name, '[0-9]', 1)-1), 'port ')  from port 
select      c.id 'client_id', g.id 'group_id', isnull(cg.client_id) from     (client c      cross join group g)     left join client_group cg on c.id = cg.client_id and g.id = cg.group_id 
select name, 'joined' as [action], join_dt as action_date   from sometable union all   select name, 'started' start_dttm   from sometable union all   select name, 'ended', end_dt   from sometable 
select  t2.cat_id , t2.subcat_id, t2.name from test t1 join test t2 on t1.cat_id = t2.cat_id where t1.subcat_id = 42 and t2.subcat_id <> 42 
select pkid, detailid, type from temp where type <> 5 group by pkid, detailid, type union select pkid, detailid, type from temp  where detailid not in ( select detailid from temp where type <> 5 group by pkid, detailid, type ) order by pkid 
select c.rec_name from composition c group by c.rec_name having sum(ing_name not in (**subquery**)) = 0; 
select *  from (select id, id_cat, modello            from tbarticoli            where id_cat=5) as tba left join (select idmodello,            floor(avg(voto)) as votomedio            from tbcommenti            group by idmodello) as tbc on tba.id = tbc.idmodello 
select * from `at_lesson_assignments`  aa  inner join `at_lesson_assignments_visibility` at on aa.assignment_id = at.assignment_id where unit > 6 
select replace([column-2],'- x','- zz x') from yourtable 
select 'alter table ' + quotename(schema_name(schema_id)) + '.' + quotename(t.name) + ' alter column ' + quotename(c.name) + ' nvarchar(50)' from sys.tables as t inner join sys.columns c on t.object_id = c.object_id where c.name like '%columniwantchanged%' 
select p.id, p.name, p.img, p.template_usage, t.name as tpl_name from platforms as p  left join xml_template as t on t.id = p.template_usage 
select u1.username, u2.username,social.val  from social   inner join utenti u1 on u1.id_ut=social.id_ut1  inner join utenti u2 on u2.id_ut=social.id_ut2 
select date_format(startdate,'%m') + date_format(startdate,'%d') + '-' + date_format(enddate,'%d') + ',' + date_format(startdate,'%y')  from yourtable 
select * from table where date < (select date from table where ordinal = 5555) order by date desc limit 1; 
select table_conversations.conversation_id, table_conversations.contact_number,        table_conversations.contact_id, max(table_messages.timestamp)  from table_conversations join table_messages on table_conversations.conversation_id = table_messages.conversation_id where table_conversations.status='active'  and table_messages.status='active'  group by contact_number  order by table_messages.timestamp; 
